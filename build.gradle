plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.sonarqube' version '5.1.0.4882'
	id 'jacoco'
}

group = 'spring.academy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.fasterxml.jackson.core:jackson-annotations'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.hsqldb:hsqldb'
	implementation 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
                showStandardStreams = true
	}
	finalizedBy jacocoTestReport
}

jacoco {
    reportsDirectory = layout.buildDirectory.dir('reports/jacoco')
}

jacocoTestReport {
	dependsOn test
	reports {
		csv.required = false
		xml.required = true
	}
}

sonar {
	properties {
		property "sonar.projectKey", "lurodrig_spring-academy-restful-lab"
		property "sonar.organization", "lurodrig"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
	}
}
